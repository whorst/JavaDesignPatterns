Builder
    Handles Complex Constructors
    Large number of parameters
    Immutability can be forced once construction is finished
    Examples - StringBuilder, DocumentBuilder

Design
    Written with a static inner class which returns the instance of the object it is building
    Static Inner Class
    Negates the need for exposed setters

-Builder objects are meant to be immutable
-Meant to handle complex constructors

-https://stackoverflow.com/questions/13887704/whats-the-point-of-the-prototype-design-pattern
The Prototype pattern is a creation pattern based on cloning a pre-configured object. The idea is that you pick an
object that is configured for either the default or in the ballpark of some specific use case and then you clone this
object and configure to your exact needs.

The pattern is useful to remove a bunch of boilerplate code, when the configuration required would be onerous. I think
of Prototypes as a preset object, where you save a bunch of state as a new starting point.